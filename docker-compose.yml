services:
  fastapi:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=staging
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${POSTGRES_STAGING_DB?error}
      POSTGRES_USER: ${POSTGRES_USER?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?error}
    ports:
      - "${DOCKER_POSTGRES_PORT?error}:5432"
  test_postgres:
    image: postgres:latest
    container_name: test_postgres
    volumes:
      - test_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_TEST_DB?error}
      POSTGRES_USER: ${POSTGRES_USER?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?error}
      
    ports:
      - "${POSTGRES_TEST_PORT?error}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h localhost"]
      interval: 5s
      retries: 5
      start_period: 10s
  
volumes:
  data:
  test_data:
